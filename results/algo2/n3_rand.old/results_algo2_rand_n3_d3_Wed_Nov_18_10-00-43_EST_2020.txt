Algorithm 2
n = 3
IN: sde = 4
IN: max T-depth target = 3
------------------
PARENT LEVEL i: 1
# of parent hyper-nodes: 1
Parent hyper-node (T-path): 0
	1 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(0,1)]
	Computing children of parent hyper-node: 0 [size: 1]
Number of children nodes (USH size): 2282
Now displaying the children nodes, unfiltered (SH): 
	(sde=4, delta_ham=1, T_path=3) | count=24
	(sde=3, delta_ham=-1, T_path=3) | count=8
	(sde=5, delta_ham=1, T_path=2) | count=96
	(sde=6, delta_ham=1, T_path=2) | count=608
	(sde=3, delta_ham=-1, T_path=1) | count=4
	(sde=4, delta_ham=1, T_path=1) | count=2
	(sde=4, delta_ham=1, T_path=2) | count=20
	(sde=5, delta_ham=1, T_path=3) | count=320
	(sde=5, delta_ham=1, T_path=1) | count=120
	(sde=7, delta_ham=1, T_path=3) | count=712
	(sde=4, delta_ham=0, T_path=2) | count=72
	(sde=4, delta_ham=-1, T_path=2) | count=4
	(sde=2, delta_ham=-1, T_path=2) | count=4
	(sde=6, delta_ham=1, T_path=3) | count=288
Children hyper-nodes before filtering (the P set): 3 1 2 
Children hyper-nodes after filtering (the P set): 3 1 2 
Minimal elements (filtered): 
	(sde=3, delta_ham=-1, T_path=3) | count=8
	(sde=4, delta_ham=1, T_path=1) | count=2
	(sde=2, delta_ham=-1, T_path=2) | count=4
Filtering the children nodes in all children hyper-nodes...
Number of children nodes after filtering (size of G): 14
------------------
PARENT LEVEL i: 2
# of parent hyper-nodes: 3
Parent hyper-node (T-path): 3
	8 nodes (unitaries)
Parent hyper-node (T-path): 1
	2 nodes (unitaries)
Parent hyper-node (T-path): 2
	4 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(1,2) (2,4) (3,8)]
	Computing children of parent hyper-node: 1 [size: 2]
	Computing children of parent hyper-node: 2 [size: 4]
	Computing children of parent hyper-node: 3 [size: 8]
Number of children nodes (USH size): 31948
Now displaying the children nodes, unfiltered (SH): 
	(sde=1, delta_ham=-1, T_path=6) | count=16
	(sde=2, delta_ham=-1, T_path=6) | count=64
	(sde=6, delta_ham=1, T_path=6) | count=3360
	(sde=5, delta_ham=1, T_path=6) | count=2464
	(sde=5, delta_ham=1, T_path=4) | count=256
	(sde=6, delta_ham=1, T_path=4) | count=928
	(sde=4, delta_ham=1, T_path=4) | count=3736
	(sde=2, delta_ham=-1, T_path=5) | count=176
	(sde=7, delta_ham=1, T_path=4) | count=1424
	(sde=3, delta_ham=1, T_path=6) | count=400
	(sde=5, delta_ham=1, T_path=2) | count=192
	(sde=3, delta_ham=-1, T_path=3) | count=16
	(sde=5, delta_ham=-1, T_path=2) | count=48
	(sde=5, delta_ham=-1, T_path=3) | count=32
	(sde=3, delta_ham=-1, T_path=6) | count=384
	(sde=3, delta_ham=1, T_path=5) | count=144
	(sde=4, delta_ham=-1, T_path=2) | count=12
	(sde=3, delta_ham=1, T_path=3) | count=480
	(sde=2, delta_ham=-1, T_path=3) | count=24
	(sde=4, delta_ham=-1, T_path=4) | count=96
	(sde=3, delta_ham=1, T_path=4) | count=412
	(sde=1, delta_ham=-1, T_path=4) | count=12
	(sde=5, delta_ham=1, T_path=5) | count=7888
	(sde=4, delta_ham=1, T_path=5) | count=2728
	(sde=6, delta_ham=1, T_path=3) | count=1216
	(sde=2, delta_ham=-1, T_path=4) | count=16
	(sde=5, delta_ham=1, T_path=3) | count=344
	(sde=3, delta_ham=-1, T_path=4) | count=48
	(sde=4, delta_ham=1, T_path=6) | count=4128
	(sde=3, delta_ham=0, T_path=5) | count=904
Children hyper-nodes before filtering (the P set): 6 5 4 2 3 
Children hyper-nodes after filtering (the P set): 6 5 4 3 
Minimal elements (filtered): 
	(sde=1, delta_ham=-1, T_path=6) | count=16
	(sde=3, delta_ham=1, T_path=5) | count=144
	(sde=1, delta_ham=-1, T_path=4) | count=12
	(sde=3, delta_ham=-1, T_path=3) | count=16
Filtering the children nodes in all children hyper-nodes...
Number of children nodes after filtering (size of G): 138
------------------
OUT:
T-depth: 3
T-path: 7
We finished when sde == 1, C0 not available
Filtered G nodes per hyper-tree level: [14]
Max. num. nodes per hyper-tree level: 14
Avg. num. nodes: 14
Took: 68617 ms
