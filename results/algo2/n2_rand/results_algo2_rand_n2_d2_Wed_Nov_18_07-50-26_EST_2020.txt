Algorithm 2
n = 2
IN: sde = 3
IN: max T-depth target = 2
------------------
PARENT LEVEL i: 1
# of parent hyper-nodes: 1
Parent hyper-node (T-path): 0
	1 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(0,1)]
	Computing children of parent hyper-node: 0 [size: 1]
Number of children nodes (USH size): 122
Now displaying the children nodes, unfiltered (SH): 
	(sde=2, delta_ham=-1, T_path=2) | count=4
	(sde=4, delta_ham=1, T_path=2) | count=20
	(sde=3, delta_ham=1, T_path=1) | count=2
	(sde=4, delta_ham=1, T_path=1) | count=24
	(sde=3, delta_ham=1, T_path=2) | count=20
	(sde=2, delta_ham=1, T_path=1) | count=2
	(sde=2, delta_ham=-1, T_path=1) | count=2
	(sde=3, delta_ham=0, T_path=2) | count=4
	(sde=5, delta_ham=1, T_path=2) | count=44
Children hyper-nodes before filtering (the P set): 2 1 
Children hyper-nodes after filtering (the P set): 2 1 
Minimal elements (filtered): 
	(sde=2, delta_ham=-1, T_path=2) | count=4
	(sde=2, delta_ham=-1, T_path=1) | count=2
Filtering the children nodes in all children hyper-nodes...
Number of children nodes after filtering (size of G): 6
------------------
PARENT LEVEL i: 2
# of parent hyper-nodes: 2
Parent hyper-node (T-path): 2
	4 nodes (unitaries)
Parent hyper-node (T-path): 1
	2 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(1,2) (2,4)]
	Computing children of parent hyper-node: 1 [size: 2]
------------------
OUT:
T-depth: 2
T-path: 3
C0 sde: 0
Is C0 identity: false
Filtered G nodes per hyper-tree level: [6]
Max. num. nodes per hyper-tree level: 6
Avg. num. nodes: 6
Took: 16 ms
