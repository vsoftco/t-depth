Algorithm 2
n = 2
IN: sde = 4
IN: max T-depth target = 7
------------------
PARENT LEVEL i: 1
# of parent hyper-nodes: 1
Parent hyper-node (T-path): 0
	1 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(0,1)]
	Computing children of parent hyper-node: 0 [size: 1]
Number of children nodes (USH size): 122
Now displaying the children nodes, unfiltered (SH): 
	(sde=4, delta_ham=0, T_path=2) | count=4
	(sde=4, delta_ham=-1, T_path=2) | count=4
	(sde=3, delta_ham=-1, T_path=1) | count=2
	(sde=5, delta_ham=-1, T_path=2) | count=8
	(sde=5, delta_ham=1, T_path=1) | count=24
	(sde=6, delta_ham=1, T_path=2) | count=64
	(sde=4, delta_ham=1, T_path=1) | count=2
	(sde=4, delta_ham=-1, T_path=1) | count=2
	(sde=5, delta_ham=1, T_path=2) | count=12
Children hyper-nodes before filtering (the P set): 2 1 
Children hyper-nodes after filtering (the P set): 2 1 
Minimal elements (filtered): 
	(sde=4, delta_ham=-1, T_path=2) | count=4
	(sde=3, delta_ham=-1, T_path=1) | count=2
Filtering the children nodes in all children hyper-nodes...
Number of children nodes after filtering (size of G): 6
------------------
PARENT LEVEL i: 2
# of parent hyper-nodes: 2
Parent hyper-node (T-path): 2
	4 nodes (unitaries)
Parent hyper-node (T-path): 1
	2 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(1,2) (2,4)]
	Computing children of parent hyper-node: 1 [size: 2]
	Computing children of parent hyper-node: 2 [size: 4]
Number of children nodes (USH size): 732
Now displaying the children nodes, unfiltered (SH): 
	(sde=5, delta_ham=-1, T_path=4) | count=16
	(sde=4, delta_ham=0, T_path=4) | count=16
	(sde=3, delta_ham=-1, T_path=4) | count=32
	(sde=4, delta_ham=1, T_path=2) | count=48
	(sde=5, delta_ham=1, T_path=3) | count=200
	(sde=4, delta_ham=1, T_path=3) | count=40
	(sde=2, delta_ham=-1, T_path=3) | count=8
	(sde=3, delta_ham=-1, T_path=2) | count=12
	(sde=3, delta_ham=0, T_path=3) | count=12
	(sde=4, delta_ham=-1, T_path=3) | count=28
	(sde=3, delta_ham=-1, T_path=3) | count=16
	(sde=5, delta_ham=1, T_path=4) | count=48
	(sde=4, delta_ham=1, T_path=4) | count=96
	(sde=6, delta_ham=1, T_path=4) | count=160
Children hyper-nodes before filtering (the P set): 4 2 3 
Children hyper-nodes after filtering (the P set): 4 2 3 
Minimal elements (filtered): 
	(sde=4, delta_ham=0, T_path=4) | count=16
	(sde=3, delta_ham=-1, T_path=2) | count=12
	(sde=2, delta_ham=-1, T_path=3) | count=8
Filtering the children nodes in all children hyper-nodes...
Number of children nodes after filtering (size of G): 32
------------------
PARENT LEVEL i: 3
# of parent hyper-nodes: 3
Parent hyper-node (T-path): 4
	12 nodes (unitaries)
Parent hyper-node (T-path): 2
	12 nodes (unitaries)
Parent hyper-node (T-path): 3
	8 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(3,8) (4,12) (2,12)]
	Computing children of parent hyper-node: 3 [size: 8]
------------------
OUT:
T-depth: 3
T-path: 5
C0 sde: 0
Is C0 identity: false
Filtered G nodes per hyper-tree level: [6 32]
Max. num. nodes per hyper-tree level: 32
Avg. num. nodes: 19
Took: 71 ms
