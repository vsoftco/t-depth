Algorithm 2
n = 3
IN: sde = 4
IN: max T-depth target = 3
------------------
PARENT LEVEL i: 1
# of parent hyper-nodes: 1
Parent hyper-node (T-path): 0
	1 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(0,1)]
	Computing children of parent hyper-node: 0 [size: 1]
Number of children nodes (USH size): 2282
Now displaying the children nodes, unfiltered (SH): 
	(sde=3, delta_ham=-1, T_path=3) | count=16
	(sde=4, delta_ham=1, T_path=3) | count=16
	(sde=6, delta_ham=1, T_path=2) | count=648
	(sde=4, delta_ham=1, T_path=2) | count=12
	(sde=4, delta_ham=1, T_path=1) | count=2
	(sde=3, delta_ham=-1, T_path=1) | count=4
	(sde=5, delta_ham=1, T_path=2) | count=68
	(sde=4, delta_ham=0, T_path=2) | count=68
	(sde=4, delta_ham=-1, T_path=2) | count=4
	(sde=2, delta_ham=-1, T_path=2) | count=4
	(sde=6, delta_ham=1, T_path=3) | count=120
	(sde=7, delta_ham=1, T_path=3) | count=800
	(sde=5, delta_ham=1, T_path=1) | count=120
	(sde=5, delta_ham=1, T_path=3) | count=400
Children hyper-nodes before filtering (the P set): 3 1 2 
Children hyper-nodes after filtering (the P set): 3 1 2 
Minimal elements (filtered): 
	(sde=3, delta_ham=-1, T_path=3) | count=16
	(sde=4, delta_ham=1, T_path=1) | count=2
	(sde=2, delta_ham=-1, T_path=2) | count=4
Filtering the children nodes in all children hyper-nodes...
Number of children nodes after filtering (size of G): 22
------------------
PARENT LEVEL i: 2
# of parent hyper-nodes: 3
Parent hyper-node (T-path): 3
	16 nodes (unitaries)
Parent hyper-node (T-path): 1
	2 nodes (unitaries)
Parent hyper-node (T-path): 2
	4 nodes (unitaries)
Computing the children nodes...
Sorted parents by size: [(1,2) (2,4) (3,16)]
	Computing children of parent hyper-node: 1 [size: 2]
	Computing children of parent hyper-node: 2 [size: 4]
	Computing children of parent hyper-node: 3 [size: 16]
Number of children nodes (USH size): 50204
Now displaying the children nodes, unfiltered (SH): 
	(sde=2, delta_ham=-1, T_path=6) | count=128
	(sde=1, delta_ham=-1, T_path=5) | count=32
	(sde=6, delta_ham=1, T_path=6) | count=11200
	(sde=7, delta_ham=1, T_path=4) | count=1600
	(sde=1, delta_ham=-1, T_path=3) | count=8
	(sde=5, delta_ham=1, T_path=4) | count=96
	(sde=6, delta_ham=1, T_path=4) | count=944
	(sde=4, delta_ham=1, T_path=4) | count=5024
	(sde=3, delta_ham=1, T_path=6) | count=32
	(sde=5, delta_ham=1, T_path=2) | count=240
	(sde=3, delta_ham=-1, T_path=3) | count=8
	(sde=4, delta_ham=-1, T_path=2) | count=12
	(sde=3, delta_ham=1, T_path=3) | count=496
	(sde=5, delta_ham=1, T_path=3) | count=280
	(sde=5, delta_ham=-1, T_path=3) | count=24
	(sde=3, delta_ham=1, T_path=5) | count=160
	(sde=5, delta_ham=1, T_path=5) | count=15120
	(sde=4, delta_ham=1, T_path=5) | count=976
	(sde=6, delta_ham=1, T_path=3) | count=1296
	(sde=2, delta_ham=-1, T_path=4) | count=48
	(sde=4, delta_ham=1, T_path=6) | count=8480
	(sde=3, delta_ham=0, T_path=5) | count=1888
	(sde=2, delta_ham=0, T_path=4) | count=64
	(sde=4, delta_ham=-1, T_path=4) | count=64
	(sde=3, delta_ham=1, T_path=4) | count=96
	(sde=3, delta_ham=-1, T_path=5) | count=96
	(sde=5, delta_ham=1, T_path=6) | count=1792
Children hyper-nodes before filtering (the P set): 6 5 4 2 3 
Children hyper-nodes after filtering (the P set): 6 5 4 3 
Minimal elements (filtered): 
	(sde=3, delta_ham=1, T_path=6) | count=32
	(sde=1, delta_ham=-1, T_path=5) | count=32
	(sde=2, delta_ham=-1, T_path=4) | count=48
	(sde=1, delta_ham=-1, T_path=3) | count=8
Filtering the children nodes in all children hyper-nodes...
Number of children nodes after filtering (size of G): 84
------------------
OUT:
T-depth: 3
T-path: 6
We finished when sde == 1, C0 not available
Filtered G nodes per hyper-tree level: [22]
Max. num. nodes per hyper-tree level: 22
Avg. num. nodes: 22
Took: 102152 ms
